# Generated by Django 5.1.3 on 2025-04-08 19:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('aml_app', '0018_alter_amlsettings_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AMLSettingss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_threshold', models.FloatField(default=10000, help_text='Max transaction amount before flagging.')),
                ('cash_deposit_limit', models.FloatField(default=5000, help_text='Max cash deposit amount before flagging.')),
                ('structuring_limit', models.FloatField(default=9500, help_text='Threshold for structuring transactions.')),
                ('inactive_days', models.IntegerField(default=365, help_text='Days an account must be inactive before considered dormant.')),
                ('multiple_beneficiaries', models.IntegerField(default=5, help_text='Max different beneficiaries in 48hrs before flagging.')),
                ('geo_location_mismatch', models.IntegerField(default=2, help_text='Max distinct locations in 48hrs before flagging.')),
                ('high_risk_countries', models.TextField(default='North Korea,Iran,Syria,Sudan,Cuba', help_text='Comma-separated list of high-risk countries.')),
                ('employee_risk_flag', models.BooleanField(default=True, help_text='Flag transactions involving employees.')),
                ('circular_transaction_days', models.IntegerField(default=1, help_text='Days within which circular transactions are flagged.')),
                ('mismatched_behavior_multiplier', models.FloatField(default=5, help_text='Multiplier for mismatched customer behavior (compared to average transaction).')),
                ('cash_deposit_no_withdrawal', models.FloatField(default=50000, help_text='Flag high cash deposits with no withdrawals.')),
                ('dormant_account_transfer_limit', models.FloatField(default=5000, help_text='Amount for flagging large transfers from dormant accounts.')),
                ('structuring_txn_count', models.IntegerField(default=3, help_text='Count of structuring transactions before flagging.')),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AMLParameterRisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_name', models.CharField(max_length=50)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=6)),
                ('aml_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameter_risks', to='aml_app.amlsettings')),
            ],
            options={
                'verbose_name': 'AML Parameter Risk',
                'verbose_name_plural': 'AML Parameter Risks',
                'unique_together': {('aml_settings', 'parameter_name')},
            },
        ),
    ]
