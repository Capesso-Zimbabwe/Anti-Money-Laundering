# Generated by Django 5.1.3 on 2025-05-15 12:59

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('transaction_monitoring', '0007_dormantaccountrule_largecashrule_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('account_number', models.CharField(db_index=True, max_length=64, unique=True)),
                ('account_type', models.CharField(choices=[('SAVINGS', 'Savings Account'), ('CHECKING', 'Checking Account'), ('LOAN', 'Loan Account'), ('TERM_DEPOSIT', 'Term Deposit'), ('CREDIT_CARD', 'Credit Card'), ('CORPORATE', 'Corporate Account'), ('INVESTMENT', 'Investment Account'), ('FOREIGN_CURRENCY', 'Foreign Currency Account'), ('OTHER', 'Other Account Type')], db_index=True, max_length=50)),
                ('account_subtype', models.CharField(blank=True, max_length=50, null=True)),
                ('is_joint_account', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('DORMANT', 'Dormant'), ('FROZEN', 'Frozen'), ('CLOSED', 'Closed'), ('PENDING', 'Pending Activation')], db_index=True, default='ACTIVE', max_length=50)),
                ('is_dormant', models.BooleanField(db_index=True, default=False)),
                ('dormancy_start_date', models.DateField(blank=True, db_index=True, null=True)),
                ('dormancy_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('reactivation_date', models.DateField(blank=True, null=True)),
                ('opening_date', models.DateField()),
                ('closing_date', models.DateField(blank=True, null=True)),
                ('last_transaction_date', models.DateField(blank=True, db_index=True, null=True)),
                ('last_activity_date', models.DateField(blank=True, db_index=True, null=True)),
                ('last_statement_date', models.DateField(blank=True, null=True)),
                ('currency_code', models.CharField(max_length=10)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=22)),
                ('available_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=22)),
                ('blocked_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=22)),
                ('overdraft_limit', models.DecimalField(decimal_places=2, default=0.0, max_digits=22)),
                ('minimum_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=22)),
                ('interest_rate', models.DecimalField(decimal_places=4, default=0.0, max_digits=10)),
                ('accrued_interest', models.DecimalField(decimal_places=2, default=0.0, max_digits=22)),
                ('branch_code', models.CharField(blank=True, max_length=20, null=True)),
                ('branch_name', models.CharField(blank=True, max_length=100, null=True)),
                ('product_code', models.CharField(blank=True, max_length=50, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('risk_score', models.IntegerField(default=0)),
                ('risk_category', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk')], default='MEDIUM', max_length=20)),
                ('kyc_status', models.CharField(choices=[('COMPLETE', 'Complete'), ('PENDING', 'Pending'), ('EXPIRED', 'Expired'), ('EXEMPTED', 'Exempted')], default='PENDING', max_length=20)),
                ('monitoring_notes', models.TextField(blank=True, null=True)),
                ('is_special_case', models.BooleanField(default=False)),
                ('special_case_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'accounts',
            },
        ),
        migrations.CreateModel(
            name='AccountHolder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('holder_type', models.CharField(choices=[('PRIMARY', 'Primary Holder'), ('JOINT', 'Joint Holder'), ('GUARDIAN', 'Guardian/Trustee'), ('AUTHORIZED', 'Authorized Signatory'), ('POWER_OF_ATTORNEY', 'Power of Attorney'), ('BENEFICIAL_OWNER', 'Beneficial Owner')], default='JOINT', max_length=20)),
                ('can_withdraw', models.BooleanField(default=True)),
                ('can_deposit', models.BooleanField(default=True)),
                ('can_close', models.BooleanField(default=False)),
                ('can_modify', models.BooleanField(default=False)),
                ('can_view_statements', models.BooleanField(default=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'account_holders',
            },
        ),
        migrations.CreateModel(
            name='AccountParameter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('account_type', models.CharField(choices=[('SAVINGS', 'Savings Account'), ('CHECKING', 'Checking Account'), ('LOAN', 'Loan Account'), ('TERM_DEPOSIT', 'Term Deposit'), ('CREDIT_CARD', 'Credit Card'), ('CORPORATE', 'Corporate Account'), ('INVESTMENT', 'Investment Account'), ('FOREIGN_CURRENCY', 'Foreign Currency Account'), ('OTHER', 'Other Account Type')], max_length=50, unique=True)),
                ('dormancy_threshold_days', models.IntegerField(default=365, help_text='Number of days of inactivity before account is considered dormant')),
                ('dormancy_warning_threshold_days', models.IntegerField(default=300, help_text='Number of days of inactivity before warning is issued')),
                ('dormancy_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Fee charged when account becomes dormant', max_digits=10)),
                ('abandoned_property_threshold_days', models.IntegerField(default=1825, help_text='Days after which account considered abandoned property')),
                ('minimum_balance_required', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('daily_withdrawal_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('daily_deposit_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('monthly_transaction_limit_count', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'account_parameters',
            },
        ),
        migrations.CreateModel(
            name='AccountStatusHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('previous_status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('DORMANT', 'Dormant'), ('FROZEN', 'Frozen'), ('CLOSED', 'Closed'), ('PENDING', 'Pending Activation')], max_length=50)),
                ('new_status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('DORMANT', 'Dormant'), ('FROZEN', 'Frozen'), ('CLOSED', 'Closed'), ('PENDING', 'Pending Activation')], max_length=50)),
                ('change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('change_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('changed_by', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_status_history',
                'ordering': ['-change_date'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('alert_id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('alert_date', models.DateField(default=django.utils.timezone.now)),
                ('alert_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('rule_type', models.CharField(db_index=True, max_length=50)),
                ('rule_code', models.CharField(db_index=True, max_length=100)),
                ('alert_score', models.IntegerField(default=0)),
                ('alert_level', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], db_index=True, default='MEDIUM', max_length=20)),
                ('primary_account_number', models.CharField(db_index=True, max_length=64)),
                ('account_type', models.CharField(blank=True, max_length=50, null=True)),
                ('primary_customer_number', models.CharField(db_index=True, max_length=64)),
                ('primary_customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_risk_level', models.CharField(blank=True, max_length=20, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('transaction_count', models.IntegerField(default=1)),
                ('currency_code', models.CharField(blank=True, max_length=10, null=True)),
                ('activity_start_date', models.DateField(blank=True, null=True)),
                ('activity_end_date', models.DateField(blank=True, null=True)),
                ('involves_high_risk_country', models.BooleanField(default=False)),
                ('involves_high_risk_party', models.BooleanField(default=False)),
                ('involves_high_risk_transaction_type', models.BooleanField(default=False)),
                ('involves_cash', models.BooleanField(default=False)),
                ('involves_dormant_account', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('ASSIGNED', 'Assigned for Review'), ('INVESTIGATING', 'Under Investigation'), ('FALSE_POSITIVE', 'Closed - False Positive'), ('LEGITIMATE', 'Closed - Legitimate Activity'), ('SUSPICIOUS', 'Closed - Suspicious Activity'), ('SAR_FILED', 'SAR Filed')], db_index=True, default='NEW', max_length=50)),
                ('assigned_to', models.CharField(blank=True, max_length=100, null=True)),
                ('assigned_date', models.DateTimeField(blank=True, null=True)),
                ('alert_title', models.CharField(max_length=255)),
                ('alert_summary', models.TextField()),
                ('alert_details', models.TextField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True, null=True)),
                ('reviewed_by', models.CharField(blank=True, max_length=100, null=True)),
                ('reviewed_date', models.DateTimeField(blank=True, null=True)),
                ('close_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('resolution_action', models.CharField(blank=True, max_length=255, null=True)),
                ('sar_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('rule_specific_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'aml_alerts',
                'ordering': ['-alert_date', '-alert_score'],
            },
        ),
        migrations.CreateModel(
            name='AlertConfiguration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('alert_type', models.CharField(choices=[('DORMANT_ACCOUNT', 'Dormant Account Activity'), ('LARGE_CASH', 'Large Cash Transaction'), ('STRUCTURING', 'Transaction Structuring'), ('HIGH_RISK_COUNTRY', 'High Risk Country'), ('RAPID_MOVEMENT', 'Rapid Movement of Funds'), ('UNUSUAL_ACTIVITY', 'Unusual Account Activity'), ('AML_PATTERN', 'AML Pattern Detection')], max_length=50)),
                ('min_customer_risk_level', models.CharField(choices=[('ALL', 'All Risk Levels'), ('LOW', 'Low Risk and Above'), ('MEDIUM', 'Medium Risk and Above'), ('HIGH', 'High Risk Only')], default='ALL', max_length=20)),
                ('min_alert_score', models.IntegerField(default=50)),
                ('applies_to_account_types', models.CharField(blank=True, max_length=255, null=True)),
                ('generate_email_notification', models.BooleanField(default=True)),
                ('notification_recipients', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'alert_configurations',
            },
        ),
        migrations.CreateModel(
            name='AlertSARRelationship',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_primary_reason', models.BooleanField(default=False, help_text='True if this alert is the primary reason for filing the SAR')),
                ('included_in_narrative', models.BooleanField(default=True)),
                ('inclusion_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'alert_sar_relationships',
            },
        ),
        migrations.CreateModel(
            name='AlertThreshold',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('factor_type', models.CharField(choices=[('TRANSACTION_AMOUNT', 'Transaction Amount'), ('TRANSACTION_COUNT', 'Transaction Count'), ('DORMANCY_DAYS', 'Dormancy Duration Days'), ('ACTIVITY_VELOCITY', 'Activity Velocity'), ('RISK_SCORE', 'Risk Score')], max_length=50)),
                ('operator', models.CharField(choices=[('GT', 'Greater Than'), ('GTE', 'Greater Than or Equal'), ('LT', 'Less Than'), ('LTE', 'Less Than or Equal'), ('EQ', 'Equal To'), ('NEQ', 'Not Equal To'), ('BETWEEN', 'Between Values')], default='GT', max_length=20)),
                ('threshold_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('upper_threshold', models.DecimalField(blank=True, decimal_places=2, help_text='Upper threshold for BETWEEN operator', max_digits=20, null=True)),
                ('score_contribution', models.IntegerField(default=10, help_text='Points added to alert score when threshold is met')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'alert_thresholds',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('customer_number', models.CharField(db_index=True, max_length=64, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('kyc_status', models.CharField(choices=[('COMPLETE', 'Complete'), ('PENDING', 'Pending'), ('EXPIRED', 'Expired'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('kyc_last_verified', models.DateField(blank=True, null=True)),
                ('kyc_next_review', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state_province', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country_name', models.CharField(blank=True, max_length=100, null=True)),
                ('risk_rating', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('EXTREME', 'Extreme Risk')], default='MEDIUM', max_length=20)),
                ('risk_score', models.IntegerField(default=50)),
                ('pep_status', models.BooleanField(default=False, help_text='Politically Exposed Person status')),
                ('sanctions_screening_status', models.CharField(choices=[('CLEAR', 'Clear'), ('REVIEW', 'Under Review'), ('MATCH', 'Potential Match'), ('CONFIRMED', 'Confirmed Match')], default='CLEAR', max_length=20)),
                ('customer_type', models.CharField(choices=[('INDIVIDUAL', 'Individual'), ('BUSINESS', 'Business'), ('TRUST', 'Trust'), ('GOVERNMENT', 'Government'), ('NGO', 'Non-profit Organization'), ('OTHER', 'Other')], default='INDIVIDUAL', max_length=20)),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('industry_code', models.CharField(blank=True, max_length=20, null=True)),
                ('tax_id', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_since', models.DateField(default=django.utils.timezone.now)),
                ('relationship_manager_id', models.CharField(blank=True, max_length=64, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_activity_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'tm_customers',
            },
        ),
        migrations.CreateModel(
            name='CustomerIdentification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('PASSPORT', 'Passport'), ('DRIVERS_LICENSE', "Driver's License"), ('NATIONAL_ID', 'National ID'), ('TAX_ID', 'Tax Identification'), ('BUSINESS_LICENSE', 'Business License'), ('CERTIFICATE_OF_INCORPORATION', 'Certificate of Incorporation'), ('OTHER', 'Other')], max_length=50)),
                ('document_number', models.CharField(max_length=100)),
                ('issuing_country', models.CharField(max_length=100)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('document_verification_status', models.CharField(choices=[('VERIFIED', 'Verified'), ('PENDING', 'Pending Verification'), ('EXPIRED', 'Expired'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'tm_customer_identifications',
            },
        ),
        migrations.CreateModel(
            name='DormantAccountAlertConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dormancy_definition_days', models.IntegerField(default=180, help_text='Number of days without activity to consider account dormant')),
                ('min_transaction_amount', models.DecimalField(decimal_places=2, default=1000.0, help_text='Minimum transaction amount to trigger alert', max_digits=20)),
                ('high_amount_threshold', models.DecimalField(decimal_places=2, default=5000.0, help_text='Amount considered high risk for dormant accounts', max_digits=20)),
                ('check_for_previous_activity_pattern', models.BooleanField(default=True, help_text='Check if previous activity exists before dormancy')),
                ('alert_on_multiple_transactions', models.BooleanField(default=True, help_text='Generate alert if multiple transactions occur within monitoring period')),
                ('consider_all_transactions', models.BooleanField(default=True, help_text='Consider all transaction types, not just deposits/credits')),
                ('monitoring_window_days', models.IntegerField(default=7, help_text='Days to monitor for subsequent activity after first transaction')),
                ('amount_factor_weight', models.IntegerField(default=30, help_text='Weight for transaction amount')),
                ('customer_risk_factor_weight', models.IntegerField(default=20, help_text='Weight for customer risk rating')),
                ('dormancy_duration_factor_weight', models.IntegerField(default=15, help_text='Weight for length of dormancy')),
                ('multiple_transactions_factor_weight', models.IntegerField(default=25, help_text='Weight for multiple transactions')),
                ('international_factor_weight', models.IntegerField(default=10, help_text='Weight for international transactions')),
            ],
            options={
                'db_table': 'dormant_account_alert_configs',
            },
        ),
        migrations.CreateModel(
            name='RelatedEntity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('entity_type', models.CharField(choices=[('TRANSACTION', 'Transaction'), ('ACCOUNT', 'Account'), ('CUSTOMER', 'Customer'), ('OTHER', 'Other Entity')], max_length=20)),
                ('entity_id', models.CharField(blank=True, max_length=100, null=True)),
                ('entity_description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_primary', models.BooleanField(default=False, help_text='True if this is the primary entity that triggered the alert')),
                ('relationship_type', models.CharField(choices=[('TRIGGER', 'Triggering Entity'), ('SAME_ACCOUNT', 'Same Account'), ('SAME_CUSTOMER', 'Same Customer'), ('COUNTERPARTY', 'Counterparty'), ('LINKED_ACCOUNT', 'Linked Account'), ('BENEFICIARY', 'Beneficiary'), ('ORIGINATOR', 'Originator'), ('PATTERN', 'Part of Pattern'), ('OTHER', 'Other Relationship')], default='OTHER', max_length=50)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'alert_related_entities',
            },
        ),
        migrations.CreateModel(
            name='SuspiciousActivityReport',
            fields=[
                ('sar_id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('sar_reference', models.CharField(max_length=100, unique=True)),
                ('filing_date', models.DateField()),
                ('report_type', models.CharField(choices=[('INITIAL', 'Initial Report'), ('CONTINUING', 'Continuing Activity'), ('CORRECTED', 'Corrected Report')], default='INITIAL', max_length=50)),
                ('activity_start_date', models.DateField()),
                ('activity_end_date', models.DateField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('currency_code', models.CharField(max_length=10)),
                ('suspicious_activity_types', models.CharField(max_length=255)),
                ('narrative_summary', models.TextField()),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('FILED', 'Filed'), ('ACKNOWLEDGED', 'Acknowledged'), ('AMENDED', 'Amended')], default='DRAFT', max_length=20)),
                ('filing_user', models.CharField(max_length=100)),
                ('acknowledgment_date', models.DateField(blank=True, null=True)),
                ('acknowledgment_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'tm_suspicious_activity_reports',
                'ordering': ['-filing_date'],
            },
        ),
        migrations.CreateModel(
            name='TransactionDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_approved', models.BooleanField(default=True)),
                ('approver_id', models.CharField(blank=True, max_length=64, null=True)),
                ('approval_timestamp', models.DateTimeField(blank=True, null=True)),
                ('approval_notes', models.TextField(blank=True, null=True)),
                ('ultimate_beneficiary', models.TextField(blank=True, null=True)),
                ('ultimate_originator', models.TextField(blank=True, null=True)),
                ('intermediary_parties', models.TextField(blank=True, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurring_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_transaction_id', models.CharField(blank=True, max_length=64, null=True)),
                ('is_reversal', models.BooleanField(default=False)),
                ('reversed_transaction_id', models.CharField(blank=True, max_length=64, null=True)),
                ('documentation_provided', models.BooleanField(default=False)),
                ('document_references', models.TextField(blank=True, null=True)),
                ('source_of_funds', models.CharField(blank=True, max_length=255, null=True)),
                ('purpose_of_transaction', models.TextField(blank=True, null=True)),
                ('compliance_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'tm_transaction_details',
            },
        ),
        migrations.DeleteModel(
            name='SuspiciousActivityReports',
        ),
        migrations.RemoveField(
            model_name='suspicioustransactions',
            name='transaction',
        ),
        migrations.RenameIndex(
            model_name='transactions',
            new_name='tm_transact_transac_234402_idx',
            old_name='Transaction_transac_e48ad9_idx',
        ),
        migrations.RenameIndex(
            model_name='transactions',
            new_name='tm_transact_is_chec_b9d1df_idx',
            old_name='Transaction_is_chec_25f5a6_idx',
        ),
        migrations.RenameIndex(
            model_name='transactions',
            new_name='tm_transact_source__0d0471_idx',
            old_name='Transaction_source__9fb10d_idx',
        ),
        migrations.AddField(
            model_name='transactions',
            name='alert_generated',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='transactions',
            name='check_rule_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='transactions',
            name='check_timestamp',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transactions',
            name='is_cash_transaction',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='transactions',
            name='is_dormant_account_activity',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='transactions',
            name='is_high_risk',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='transactions',
            name='is_international',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AlterModelTable(
            name='transactions',
            table='tm_transactions',
        ),
        migrations.AddField(
            model_name='transactions',
            name='destination_account',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incoming_transactions', to='transaction_monitoring.account'),
        ),
        migrations.AddField(
            model_name='transactions',
            name='source_account',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='outgoing_transactions', to='transaction_monitoring.account'),
        ),
        migrations.AddField(
            model_name='accountholder',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_holders', to='transaction_monitoring.account'),
        ),
        migrations.AddField(
            model_name='accountstatushistory',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='transaction_monitoring.account'),
        ),
        migrations.AddField(
            model_name='alert',
            name='primary_account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_alerts', to='transaction_monitoring.account'),
        ),
        migrations.AddField(
            model_name='alert',
            name='rule',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_alerts', to='transaction_monitoring.amlrules'),
        ),
        migrations.AddField(
            model_name='alert',
            name='triggering_transaction',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggered_alerts', to='transaction_monitoring.transactions'),
        ),
        migrations.AddField(
            model_name='alertsarrelationship',
            name='alert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sar_relationships', to='transaction_monitoring.alert'),
        ),
        migrations.AddField(
            model_name='alertthreshold',
            name='alert_config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thresholds', to='transaction_monitoring.alertconfiguration'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['customer_type'], name='tm_customer_custome_ca308f_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['risk_rating'], name='tm_customer_risk_ra_7c9e48_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['kyc_status'], name='tm_customer_kyc_sta_c8a32f_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['is_active'], name='tm_customer_is_acti_6aa5a1_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['last_activity_date'], name='tm_customer_last_ac_005d9c_idx'),
        ),
        migrations.AddField(
            model_name='alert',
            name='primary_customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_alerts', to='transaction_monitoring.customer'),
        ),
        migrations.AddField(
            model_name='accountholder',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts_held', to='transaction_monitoring.customer'),
        ),
        migrations.AddField(
            model_name='account',
            name='primary_customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_accounts', to='transaction_monitoring.customer'),
        ),
        migrations.AddField(
            model_name='transactions',
            name='destination_customer',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incoming_transactions', to='transaction_monitoring.customer'),
        ),
        migrations.AddField(
            model_name='transactions',
            name='source_customer',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='outgoing_transactions', to='transaction_monitoring.customer'),
        ),
        migrations.AddIndex(
            model_name='transactions',
            index=models.Index(fields=['destination_account_number', 'transaction_timestamp'], name='tm_transact_destina_7d88dd_idx'),
        ),
        migrations.AddIndex(
            model_name='transactions',
            index=models.Index(fields=['is_dormant_account_activity'], name='tm_transact_is_dorm_308379_idx'),
        ),
        migrations.AddIndex(
            model_name='transactions',
            index=models.Index(fields=['transaction_type_code'], name='tm_transact_transac_cc0ba9_idx'),
        ),
        migrations.AddIndex(
            model_name='transactions',
            index=models.Index(fields=['alert_generated'], name='tm_transact_alert_g_04345d_idx'),
        ),
        migrations.AddField(
            model_name='customeridentification',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifications', to='transaction_monitoring.customer'),
        ),
        migrations.AddField(
            model_name='dormantaccountalertconfig',
            name='alert_config',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dormant_account_config', to='transaction_monitoring.alertconfiguration'),
        ),
        migrations.AddField(
            model_name='relatedentity',
            name='account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_to_alerts', to='transaction_monitoring.account'),
        ),
        migrations.AddField(
            model_name='relatedentity',
            name='alert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_entities', to='transaction_monitoring.alert'),
        ),
        migrations.AddField(
            model_name='relatedentity',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_to_alerts', to='transaction_monitoring.customer'),
        ),
        migrations.AddField(
            model_name='relatedentity',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_to_alerts', to='transaction_monitoring.transactions'),
        ),
        migrations.AddField(
            model_name='suspiciousactivityreport',
            name='primary_account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='associated_sars', to='transaction_monitoring.account'),
        ),
        migrations.AddField(
            model_name='suspiciousactivityreport',
            name='primary_subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sars_as_subject', to='transaction_monitoring.customer'),
        ),
        migrations.AddField(
            model_name='alertsarrelationship',
            name='sar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_relationships', to='transaction_monitoring.suspiciousactivityreport'),
        ),
        migrations.AddField(
            model_name='transactiondetail',
            name='transaction',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='transaction_monitoring.transactions'),
        ),
        migrations.DeleteModel(
            name='SuspiciousTransactions',
        ),
        migrations.AlterUniqueTogether(
            name='alertthreshold',
            unique_together={('alert_config', 'factor_type', 'threshold_value')},
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['alert_date'], name='aml_alerts_alert_d_52dd55_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['rule_type'], name='aml_alerts_rule_ty_2d20fc_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['rule_code'], name='aml_alerts_rule_co_f4a6b4_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['primary_account_number'], name='aml_alerts_primary_cbdba4_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['primary_customer_number'], name='aml_alerts_primary_1269ea_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['status'], name='aml_alerts_status_bd85a1_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['alert_level'], name='aml_alerts_alert_l_b92a00_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['assigned_to'], name='aml_alerts_assigne_12559a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='accountholder',
            unique_together={('account', 'customer')},
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['account_type'], name='accounts_account_8fba74_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['status'], name='accounts_status_8b566b_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['is_dormant'], name='accounts_is_dorm_dce70a_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['dormancy_start_date'], name='accounts_dormanc_ba9754_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['last_transaction_date'], name='accounts_last_tr_ee77b3_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['opening_date'], name='accounts_opening_2203c6_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['risk_category'], name='accounts_risk_ca_d7a8a2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customeridentification',
            unique_together={('customer', 'document_type', 'document_number')},
        ),
        migrations.AddIndex(
            model_name='relatedentity',
            index=models.Index(fields=['entity_type'], name='alert_relat_entity__087eb6_idx'),
        ),
        migrations.AddIndex(
            model_name='relatedentity',
            index=models.Index(fields=['is_primary'], name='alert_relat_is_prim_d01981_idx'),
        ),
        migrations.AddIndex(
            model_name='relatedentity',
            index=models.Index(fields=['relationship_type'], name='alert_relat_relatio_e0bf85_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='relatedentity',
            unique_together={('alert', 'entity_type', 'account'), ('alert', 'entity_type', 'customer'), ('alert', 'entity_type', 'entity_id'), ('alert', 'entity_type', 'transaction')},
        ),
        migrations.AlterUniqueTogether(
            name='alertsarrelationship',
            unique_together={('alert', 'sar')},
        ),
    ]
